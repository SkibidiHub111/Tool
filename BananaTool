#!/usr/bin/env bash
# beta
set -euo pipefail
DATA=''
tmpfile="$(mktemp /tmp/oka.XXXXXX.sh)"
echo "$DATA" | base64 -d > "$tmpfile"
chmod +x "$tmpfile"
bash "$tmpfile" "$@"
rm -f "$tmpfile"
